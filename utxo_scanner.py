"""
UTXO Scanner ‚Äî —É—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ UTXO –ø–æ Bitcoin-–∞–¥—Ä–µ—Å—É —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ —Å—É–º–º–µ.
"""

import requests
import argparse

def get_utxos(address, min_value=0):
    url = f"https://api.blockchair.com/bitcoin/dashboards/address/{address}?limit=100"
    r = requests.get(url)
    if r.status_code != 200:
        raise Exception("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–¥—Ä–µ—Å—É.")

    utxos = r.json()["data"][address]["utxo"]
    filtered = [u for u in utxos if u["value"] >= min_value]
    return filtered

def scan_utxos(address, min_value=0):
    print(f"üîç –ü–æ–∏—Å–∫ UTXO –¥–ª—è –∞–¥—Ä–µ—Å–∞: {address}")
    utxos = get_utxos(address, min_value)
    if not utxos:
        print("üï≥Ô∏è –ù–µ—Ç UTXO, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä—É.")
        return

    total = sum(u["value"] for u in utxos)
    print(f"ü™ô –ù–∞–π–¥–µ–Ω–æ UTXO: {len(utxos)}")
    print(f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total} —Å–∞—Ç–æ—à–∏")
    print()

    for i, u in enumerate(utxos, 1):
        print(f"{i}. TX: {u['transaction_hash']} | Index: {u['index']} | –°—É–º–º–∞: {u['value']} —Å–∞—Ç–æ—à–∏")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="UTXO Scanner ‚Äî —Ñ–∏–ª—å—Ç—Ä –ø–æ –Ω–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –≤—ã—Ö–æ–¥–∞–º.")
    parser.add_argument("address", help="Bitcoin-–∞–¥—Ä–µ—Å")
    parser.add_argument("-m", "--min", type=int, default=0, help="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ (—Å–∞—Ç–æ—à–∏)")
    args = parser.parse_args()

    scan_utxos(args.address, args.min)
